global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'
def comment(): 
	return vim.eval('vimtex#syntax#in_comment()') == '1'
def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')") 
	return x != '0' and y != '0'
def backslash(snip):
    (line, col) = snip.cursor
    text_before_cursor = snip.buffer[line][:col]
    if re.search(r'\\[a-zA-Z]+$', text_before_cursor):
        return False
    return True
endglobal

snippet template "Basic template" b
\documentclass[a4paper]{article}

\usepackage[utf8]{inputenc}
\usepackage[T1]{fontenc}
%\usepackage{textcomp}
%\usepackage[dutch]{babel}
\usepackage{amsmath, amssymb}
\usepackage{parskip}
\usepackage{mathtools}
\usepackage{dsfont, cancel}

\pdfsuppresswarningpagegroup=1

\begin{document}
$0
\end{document}
endsnippet

snippet beg "begin{} / end{}" bA
\\begin{$1}
$0
\\end{$1}
endsnippet

snippet mm "Math" wA
\(${1}\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dm "Math" wA
\[ $1 \]$0
endsnippet

snippet ... "dots" iA
\ldots
endsnippet

context "math()"
snippet xn "x_n" iA
x_n
endsnippet

context "math()"
snippet yn "y_n" iA
y_n
endsnippet

context "math()"
snippet zn "z_n" iA
z_n
endsnippet

context "math()"
snippet fn "f_n" iA
f_n
endsnippet

context "math()"
snippet fxx "fxx" iA
f_{xx}
endsnippet

context "math()"
snippet fyy "fyy" iA
f_{yy}
endsnippet

context "math()"
snippet fxy "fxy" iA
f_{xy}
endsnippet

context "math()"
snippet fyx "fyx" iA
f_{yx}
endsnippet

priority 20
context "math()"
snippet '([_^])([a-z])(\d)' "x_{n+1}" irA
`!p snip.rv = match.group(1)`{`!p snip.rv = match.group(2)`+`!p snip.rv = match.group(3)`}
endsnippet

priority 20
context "math()"
snippet '([_^])([a-z]?[+-])' "x_{n-1}" irA
`!p snip.rv = match.group(1)`{`!p snip.rv = match.group(2)`$1}$0
endsnippet

priority 20
context "math() and backslash(snip)"
snippet '([a-zA-Z])([ijk])' "a_i" irA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

priority 30
context "math()"
snippet '([a-zA-Z])_([ijk0-9]{2})' "a_i" irA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

priority 10
context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

priority 10
context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript 2" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet ^[ "x^{[]}" iA
^{[$1]}$0
endsnippet

context "math()"
snippet ^( "x^{()}" iA
^{($1)}$0
endsnippet

context "math()"
snippet hh "h hoed" iA
\hat{h}
endsnippet

context "math()"
snippet '   ' "quad" irA
 \quad 
endsnippet

snippet .a "alpha" i
\alpha
endsnippet
snippet .A "Alpha" i
\Alpha
endsnippet
snippet .b "beta" i
\beta
endsnippet
snippet .B "Beta" i
\Beta
endsnippet
snippet .g "gamma" i
\gamma
endsnippet
snippet .G "Gamma" i
\Gamma
endsnippet
snippet .d "delta" i
\delta
endsnippet
snippet .D "Delta" i
\Delta
endsnippet
snippet .ep "epsilon" i
\epsilon
endsnippet
snippet .Ep "Epsilon" i
\Epsilon
endsnippet
snippet .z "zeta" i
\zeta
endsnippet
snippet .Z "Zeta" i
\Zeta
endsnippet
snippet .et "eta" i
\eta
endsnippet
snippet .Et "Eta" i
\Eta
endsnippet
snippet .th "theta" i
\theta
endsnippet
snippet .Th "Theta" i
\Theta
endsnippet
snippet .i "iota" i
\iota
endsnippet
snippet .I "Iota" i
\Iota
endsnippet
snippet .k "kappa" i
\kappa
endsnippet
snippet .K "Kappa" i
\Kappa
endsnippet
snippet .l "lambda" i
\lambda
endsnippet
snippet .L "Lambda" i
\Lambda
endsnippet
snippet .m "mu" i
\mu
endsnippet
snippet .M "Mu" i
\Mu
endsnippet
snippet .nu "nu" i
\nu
endsnippet
snippet .Nu "Nu" i
\Nu
endsnippet
snippet .x "xi" i
\xi
endsnippet
snippet .X "Xi" i
\Xi
endsnippet
snippet .o "omicron" i
\omicron
endsnippet
snippet .O "Omicron" i
\Omicron
endsnippet
snippet .pi "pi" i
\pi
endsnippet
snippet .Pi "Pi" i
\Pi
endsnippet
snippet .r "rho" i
\rho
endsnippet
snippet .R "Rho" i
\Rho
endsnippet
snippet .s "sigma" i
\sigma
endsnippet
snippet .S "Sigma" i
\Sigma
endsnippet
snippet .ta "tau" i
\tau
endsnippet
snippet .Ta "Tau" i
\Tau
endsnippet
snippet .u "upsilon" i
\upsilon
endsnippet
snippet .U "Upsilon" i
\Upsilon
endsnippet
snippet .ph "phi" i
\phi
endsnippet
snippet .Ph "Phi" i
\Phi
endsnippet
snippet .c "chi" i
\chi
endsnippet
snippet .C "Chi" i
\Chi
endsnippet
snippet .ps "psi" i
\psi
endsnippet
snippet .Ps "Psi" i
\Psi
endsnippet
snippet .w "omega" i
\omega
endsnippet
snippet .W "Omega" i
\Omega
endsnippet
snippet .na "nabla" i
\nabla
endsnippet
snippet .Na "Nabla" i
\Nabla
endsnippet

context "math()"
snippet () "left( right)" i
\left( ${1:${VISUAL}} \right) $0
endsnippet

context "math()"
snippet || "left| right|" i
\left| ${1:${VISUAL}} \right| $0
endsnippet

context "math()"
snippet |||| "left|| right||" i
\left\| ${1:${VISUAL}} \right\| $0
endsnippet

context "math()"
snippet {} "left\{ right\}" i
\left\\{ ${1:${VISUAL}} \right\\} $0
endsnippet

context "math()"
snippet [] "left[ right]" i
\left[ ${1:${VISUAL}} \right] $0
endsnippet

context "math()"
snippet <> "leftangle rightangle" i
\left\langle ${1:${VISUAL}} \right\rangle $0
endsnippet

context "math()"
snippet ceil "ceil" i
\left\lceil ${1:${VISUAL}} \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" i
\left\lfloor ${1:${VISUAL}} \right\rfloor $0
endsnippet

snippet ub "underbrace" i
\underbrace{${1:${VISUAL}}}_{$2}$0
endsnippet

snippet ob "overbrace" i
\overbrace{${1:${VISUAL}}}^{$2}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet / "Fraction" i
\\frac{${VISUAL}}{$1}$0
endsnippet

context "math()"
snippet int "integral" w
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

context "math()"
snippet sum "sum" w
\sum_{${1:i=0}}^{${2:k}} $0
endsnippet

context "math()"
snippet prod "product" w
\prod_{${1:n=${2:1}}}^{${3:\infty}} ${4:${VISUAL}} $0
endsnippet

context "math()"
snippet lim "limit" w
\lim_{${1:n} \to ${2:\infty}} 
endsnippet

context "math()"
snippet part "d/dx" w
\frac{\partial ${1:V}}{\partial ${2:x}} $0
endsnippet

context "math()"
snippet "<= " "<=" iAr
\leqslant 
endsnippet

priority 100
context "math()"
snippet -> "rightarrow" iA
\rightarrow
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

priority 100
context "math()"
snippet => "Rightarrow" iA
\Rightarrow
endsnippet

priority 200
context "math()"
snippet <=> "Leftrightarrow" iA
\Leftrightarrow
endsnippet

priority 200
context "math()"
snippet <-> "leftrightarrow" iA
\leftrightarrow
endsnippet

context "math()"
snippet '\|([A-Z])' "dsmath" irA
\mathds{`!p snip.rv = match.group(1)`}
endsnippet

context "math()"
snippet '\/([A-Z])' "dsmath" irA
\mathcal{`!p snip.rv = match.group(1)`}
endsnippet

snippet cvec "column vector" iA
\begin{pmatrix} $1 \end{pmatrix}$0
endsnippet

snippet cvec2 "column vector" iA
\begin{pmatrix} ${1:x}_${2:1}\\\\ \vdots\\\\ $1_${2:n} \end{pmatrix}
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

snippet euler "euler" w
\[ y_{n+1}-y_n=hf(x_n,y_n) \] 
endsnippet

snippet aeuler "euler" w
\[ y_{n+1}-y_n=hf(x_{n+1},y_{n+1}) \] 
endsnippet

snippet \ "command" i
\\${1:text}{${2:${VISUAL}}}$0
endsnippet

context "math()"
snippet loc "command" iA
\text{loc}
endsnippet

context "math()"
snippet Loc "command" iA
\text{Loc}
endsnippet

context "math()"
snippet def "command" wA
\triangleq
endsnippet

context "math()"
snippet U "command" i
\cup
endsnippet

context "math()"
snippet V "command" i
\cap
endsnippet

snippet frame "frame" w
\begin{frame}
\frametitle{$1}
$0
\end{frame}
endsnippet

snippet \"i "trema" iA
\"{\i}
endsnippet

snippet '\\"([aeou])' "trema" irA
\"{`!p snip.rv = match.group(1)`}
endsnippet

snippet \`i "grave" iA
\`{\i}
endsnippet

snippet '\\`([aeou])' "grave" irA
\`{`!p snip.rv = match.group(1)`}
endsnippet

snippet \'i "acute" iA
\'{\i}
endsnippet

snippet '\\'([aeou])' "acute" irA
\'{`!p snip.rv = match.group(1)`}
endsnippet

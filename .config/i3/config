# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:FiraCode Nerd Font 12px

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.
# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the # screen before suspend. Use loginctl lock-session to lock your screen.
# exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# Brightness controls
bindsym XF86MonBrightnessUp exec --no-startup-id sudo /home/vital/.local/bin/brightness.sh 5
bindsym XF86MonBrightnessDown exec --no-startup-id sudo /home/vital/.local/bin/brightness.sh -5

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id /home/vital/.local/bin/volume.sh inc
bindsym XF86AudioLowerVolume exec --no-startup-id /home/vital/.local/bin/volume.sh dec
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Use amixer to adjust volume in ALSA.
#bindsym XF86AudioRaiseVolume exec --no-startup-id amixer -c Generic -q sset Master 5%+
#bindsym XF86AudioLowerVolume exec --no-startup-id amixer -c Generic -q sset Master 5%-
#bindsym XF86AudioMute exec --no-startup-id amixer -c Generic -q sset Master toggle

# Use flameshot to make screenshots
bindsym Print exec flameshot gui -p ~/media/screenshots
bindsym Shift+Print exec flameshot full -p ~/media/screenshots

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec wezterm

# kill focused window
bindsym $mod+Shift+q kill
bindsym $mod+q kill
bindsym $mod+d kill

# start rofi (a program launcher)
bindsym $mod+space exec --no-startup-id rofi -show drun -modi drun -lines 10 -width 30
bindsym $mod+BackSpace exec --no-startup-id rofi -show drun -modi drun -lines 10 -width 30
bindsym $mod+Escape exec --no-startup-id rofi -show drun -modi drun -lines 10 -width 30

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+b split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+u layout toggle stacking splitv
bindsym $mod+i layout toggle tabbed splith
bindsym $mod+o layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+c focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# cycle between workspaces
bindsym Mod1+Tab workspace next_on_output
bindsym Mod1+Shift+Tab workspace prev_on_output

# switch to previously focused workspace when switching to the workspace that is currently focused
workspace_auto_back_and_forth yes

# move workspace to next display
bindsym $mod+p move workspace to output next
# bindsym $mod+p exec "swaymsg -t get_outputs |jq '[.[] | select(.active == true)] | .[(map(.focused) | index(true) + 1) % length].name' |xargs swaymsg move workspace to"

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# read 1 character and mark the current window with this character
bindsym $mod+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '

# read 1 character and go to the window with the character
bindsym $mod+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 5 px or 5 ppt
        bindsym j resize grow height 5 px or 5 ppt
        bindsym k resize shrink height 5 px or 5 ppt
        bindsym l resize grow width 5 px or 5 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 5 px or 5 ppt
        bindsym Down resize grow height 5 px or 5 ppt
        bindsym Up resize shrink height 5 px or 5 ppt
        bindsym Right resize grow width 5 px or 5 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

default_border pixel 2
gaps inner 7
gaps outer 0

# Only enable gaps and borders when there is at least one container
smart_gaps on
smart_borders on

# don't change focus when mouse moves
focus_follows_mouse no

# don't move mouse when switching focus to a different output
mouse_warping none

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# Enable floating dialogs application window
for_window [window_role="pop-up"] floating enable
for_window [window_role="task_dialog"] floating enable

# exit with keyboard shortcuts
set $mode_exit exit: loc[k], [l]ogout, s[u]spend, [r]eboot, [s]hutdown
bindsym $mod+x mode "$mode_exit"

mode "$mode_exit" {
  bindsym k exec i3lock, mode "default"
  # bindsym k exec swaylock -f -c 000000, mode "default"
  bindsym l exec i3-msg exit, mode "default"
  # bindsym l exec swaymsg exit, mode "default"
  bindsym u exec loginctl suspend, mode "default"
  bindsym r exec loginctl reboot, mode "default"
  # bindsym r exec systemctl reboot, mode "default"
  bindsym s exec loginctl poweroff, mode "default"
  # bindsym s exec shutdown -h now, mode "default"
  bindsym Escape mode "default"
  bindsym Return mode "default"
}

#
# Screen capture
#
# set $screenshot a: selected, s: current screen, d: selected clipboard, f: current screen clipboard, g: swappy
# mode "$screenshot" {
#     bindsym a exec 'grim -g "$(slurp)" ~/Pictures/Screenshots/ps_$(date +"%Y%m%d%H%M%S").png', mode "default"
#     # bar is 22 pixels high on current screen, might differ between hardware
#     bindsym s exec 'grim -g "$(swaymsg -t get_outputs | jq -r '"'.[] | select(.focused).rect | .height = .height - 22 | .y = .y + 22 | "'"\(.x),\(.y) \(.width)x\(.height)"'"')"'" ~/Pictures/Screenshots/ps_$(date +"%Y%m%d%H%M%S").png', mode "default"
#     bindsym d exec 'grim -g "$(slurp)" - | wl-copy', mode "default"
#     bindsym f exec 'grim -g "$(swaymsg -t get_outputs | jq -r '"'.[] | select(.focused).rect | .height = .height - 22 | .y = .y + 22 | "'"\(.x),\(.y) \(.width)x\(.height)"'"')"'" - | wl-copy', mode "default"
#     bindsym g exec 'grim -g "$(slurp)" - | swappy -f -', mode "default"
#
# # back to normal: Enter or Escape
#     bindsym Return mode "default"
#     bindsym Escape mode "default"
#     bindsym Print mode "default"
# }
#
# bindsym Print mode "$screenshot"


# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'

# Nord theme colors
set $nord0   #2E3440
set $nord1   #3B4252
set $nord2   #434C5E
set $nord3   #4C566A
set $nord4   #D8DEE9
set $nord5   #E5E9F0
set $nord6   #ECEFF4
set $nord7   #8FBCBB
set $nord8   #88C0D0
set $nord9   #81A1C1
set $nord10  #5E81AC
set $nord11  #BF616A
set $nord12  #D08770
set $nord13  #EBCB8B
set $nord14  #A3BE8C
set $nord15  #B48EAD

# class                 border  backgr. text    indicator
client.focused          $nord9  $nord8  $nord3  $nord10
client.focused_inactive $nord1  $nord3  $nord8  $nord0
client.unfocused        $nord1  $nord3  $nord8  $nord0
client.urgent           $nord15 $nord15 $nord3  $nord10
client.placeholder      $nord0  $nord0  $nord3  $nord0
client.background       $nord0

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
    tray_output primary
    status_command i3blocks
    # swaybar_command waybar
    position top
    font pango:FiraCode Nerd Font 12px

    # unlearn habit of scrolling bar
    # bindsym button4 nop
    # bindsym button5 nop

    colors {
      background $nord1
      statusline $nord8
      focused_background $nord1

      focused_workspace  $nord3  $nord8  $nord3
      active_workspace   $nord3  $nord10 $nord3
      inactive_workspace $nord8  $nord3  $nord8
      urgent_workspace   $nord3  $nord15 $nord3
    }
}

# assign workspaces to monitors
# workspace $ws1 output HDMI-A-1
# workspace $ws2 output HDMI-A-1

# assign windows to workspaces
for_window [class="PPSSPP"] floating enable resize set 960 544
for_window [class="(?i)keepass"] floating enable resize set 800 600
assign [class="discord"] $ws7
for_window [class="Spotify"] move to workspace $ws6
assign [class="zoom" title="Zoom - Free Account"] $ws10
assign [class="zoom" title="Settings"] $ws10
assign [class="zoom" title="zoom"] $ws10
assign [class="zoom"] $ws4
for_window [class="zoom" title="Chat"] resize shrink width 600
for_window [class="zoom" title="Breakout"] resize shrink width 600
for_window [class="zoom" title="Polls"] resize shrink width 400
assign [class="(?i)microsoft teams"] $ws4
assign [class="jetbrains-idea"] $ws2
assign [class="jetbrains-studio"] $ws2
assign [class="keepassxc"] $ws9
assign [class="(?i)steam"] $ws5
assign [title="(?i)steam"] $ws5
for_window [class="Yad"] floating enable

# get properties using `swaymsg -t get_tree`
# matchable attributes: https://man.archlinux.org/man/sway.5.en#CRITERIA
# assign [app_id="SWT"] $ws3
# assign [app_id="java"] $ws3
# assign [app_id="Eclipse"] $ws3
# assign [class="Code"] $ws4

exec --no-startup-id /usr/bin/dunst
exec_always --no-startup-id "picom --config ~/.config/picom.conf"
exec --no-startup-id /usr/bin/gentoo-pipewire-launcher
# exec --no-startup-id /usr/bin/lxpolkit
exec --no-startup-id /usr/bin/syncthing serve --no-browser --logfile=default

# local settings
include ~/.config/i3/local
